syntax = "proto3";

package schemas.v1;

import "schemas/validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// お試しで作成した Enum。
// 適当。
enum HelloType {
  // 謎
  HELLO_TYPE_UNSPECIFIED = 0;
  // Foo
  HELLO_TYPE_FOO = 1;
  // Bar
  HELLO_TYPE_BAR = 2;
}


// 送信の Example。
message SendMessageRequest {
  // センテンス。最大 256 文字。
  string sentence = 1 [(validate.rules).string = {
    max_len: 256,
  }];

  // EMail。
  string email = 2 [(validate.rules).string.email = true];

  // サンプルの Enum。
  HelloType type = 3;
}

// 受信の Example。
message GetMessageResponse {
  // センテンス。最大 256 文字。
  string sentence = 1 [(validate.rules).string = {
    max_len: 256,
  }];

  // EMail。
  string email = 2 [(validate.rules).string.email = true];

  // サンプルの Enum。
  HelloType type = 3;

  // お試しで受け取るタイムスタンプ。
  google.protobuf.Timestamp got_at = 4;
}

// HelloWorld サービス。
service HelloWorldService {
  // メッセージを受け取る。
  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty) {}
  // メッセージを受け取る。
  rpc GetMessage(google.protobuf.Empty) returns (GetMessageResponse) {}
  // メッセージを定期的に受け取る。
  rpc StreamGetMessage(google.protobuf.Empty) returns (stream GetMessageResponse) {}
}
